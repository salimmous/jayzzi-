import React, { useState } from 'react';
import { useDropzone } from 'react-dropzone';
import { Upload, Copy, Play } from 'lucide-react';

function DescribeImage() {
  const [description, setDescription] = useState<string>('');
  const [isProcessing, setIsProcessing] = useState(false);

  const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({
    accept: {
      'image/*': ['.png', '.jpg', '.jpeg', '.webp']
    },
    maxFiles: 1,
  });

  const handleDescribe = async () => {
    if (acceptedFiles.length === 0) return;
    
    setIsProcessing(true);
    // Simulate API call
    setTimeout(() => {
      setDescription('This is a sample image description that would be generated by the AI model.');
      setIsProcessing(false);
    }, 2000);
  };

  const handleCopy = () => {
    navigator.clipboard.writeText(description);
  };

  return (
    <div className="max-w-4xl mx-auto">
      <h1 className="text-3xl font-bold mb-8">Describe Image</h1>

      <div className="space-y-8">
        {/* Upload Section */}
        <div className="bg-white p-6 rounded-lg shadow-sm">
          <h2 className="text-xl font-semibold mb-4">Upload Image</h2>
          <div
            {...getRootProps()}
            className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer
              ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300'}`}
          >
            <input {...getInputProps()} />
            <Upload className="mx-auto mb-4" size={32} />
            {acceptedFiles.length > 0 ? (
              <p className="text-sm text-gray-600">
                Selected: {acceptedFiles[0].name}
              </p>
            ) : (
              <p className="text-sm text-gray-600">
                Drag & drop an image here, or click to select
              </p>
            )}
          </div>
        </div>

        {/* Preview */}
        {acceptedFiles.length > 0 && (
          <div className="bg-white p-6 rounded-lg shadow-sm">
            <h2 className="text-xl font-semibold mb-4">Preview</h2>
            <img
              src={URL.createObjectURL(acceptedFiles[0])}
              alt="Preview"
              className="max-h-96 mx-auto rounded-lg"
            />
          </div>
        )}

        {/* Description */}
        <div className="bg-white p-6 rounded-lg shadow-sm">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold">Description</h2>
            {description && (
              <button
                onClick={handleCopy}
                className="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 flex items-center"
              >
                <Copy size={16} className="mr-2" />
                Copy
              </button>
            )}
          </div>
          
          {description ? (
            <p className="text-gray-700 whitespace-pre-wrap">{description}</p>
          ) : (
            <div className="text-center py-12 text-gray-500">
              {isProcessing ? (
                <div className="animate-pulse">Processing image...</div>
              ) : (
                <p>Upload an image and click "Start Describe" to generate a description</p>
              )}
            </div>
          )}
        </div>

        {/* Action Button */}
        <button
          onClick={handleDescribe}
          disabled={acceptedFiles.length === 0 || isProcessing}
          className={`w-full py-3 rounded-md flex items-center justify-center
            ${acceptedFiles.length === 0 || isProcessing
              ? 'bg-gray-400 cursor-not-allowed'
              : 'bg-blue-600 hover:bg-blue-700'} text-white`}
        >
          <Play className="mr-2" size={20} />
          Start Describe
        </button>
      </div>
    </div>
  );
}

export default DescribeImage;
